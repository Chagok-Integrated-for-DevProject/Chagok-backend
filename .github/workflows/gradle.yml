# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "deploy" ]
  pull_request:
    branches: [ "deploy" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: ðŸ”§ Build Spring server
      run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test
          
  deploy:
     runs-on: ubuntu-latest
     steps:
     - name: scp jarFile
       uses: appleboy/scp-action@master
       with:
          username: root
          host: ${{secrets.SSH_HOST }}
          key: ${{ secrets.SSH_PEM_KEY }}
          source: "./build/libs/*.jar"
          target: "/home/root/deploy/chagok"
          strip_components: 1
     - name: execute jar
       uses: appleboy/ssh-action@master
       with:
          username: root
          host: ${{secrets.SSH_HOST }}
          key: ${{ secrets.SSH_PEM_KEY }}
          port: 22
          script: |
             cd deploy/chagok
             sudo fuser -k 8080/tcp
             #8080 ì‹¤í–‰ ì¤‘ì§€
             nohup java -jar *.jar &
             
        
      


      
