

name: Java CI with Gradle

on:
  push:
    branches: [ "deploy-test" ]
  pull_request:
    branches: [ "deploy-test" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'

    - name: 💾 Cache Gradle & Spring
      uses: actions/cache@v3
      with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
          arguments: build
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: cicdsample
        path: build/libs/*.jar
     
  deploy:
     runs-on: ubuntu-latest
     needs: build
     # build가 끝나야 실행
     steps:
       - name: Docker build
         run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build  -t app .
          # 이름은 app으로 f는 현재 경로 -f /home/runner/work/Chagok-backend/Dockerfile 
          docker tag app ${{ secrets.DOCKER_USERNAME }}/chagok:latest
          # 이름 변경
          docker push ${{ secrets.DOCKER_USERNAME }}/chagok:latest
       - name: Deploy
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.SSH_HOST}}
           username: root
           key: ${{ secrets.SSH_PEM_KEY }}
           script: |
             docker pull ${{ secrets.DOCKER_USERNAME }}/chagok:latest
             docker tag app ${{ secrets.DOCKER_USERNAME }}/chagok:latest chagok:latest
             docker stop $(docker ps -a -q)
             #모든 컨테이너 종료
             docker log run -d --log-driver=syslog -p 8080:8080 chagok:latest
             #-d(백그라운드) ,--log-driver(로그 출력을 시스템 로그로) 
             docker rm $(docker ps --filter 'status=exited' -a -q)
             # 실행 중이지 않으 모든 컨테인 삭제
             docker image prune -a -f
             # 사용하지않은 모든 이미지 삭제
          
          
          
#      - name: scp jarFile
#        uses: appleboy/scp-action@master
#        with:
#           username: root
#           host: ${{secrets.SSH_HOST }}
#           key: ${{ secrets.SSH_PEM_KEY }}
#           source: "./build/libs/*.jar"
#           target: "/home/root/deploy/chagok"
#           strip_components: 1
#      - name: execute jar
#        uses: appleboy/ssh-action@master
#        with:
#           username: root
#           host: ${{secrets.SSH_HOST }}
#           key: ${{ secrets.SSH_PEM_KEY }}
#           port: 22
#           script: |
#              cd deploy/chagok
#              sudo fuser -k 8080/tcp
#              #8080 실행 중지
#              nohup java -jar *.jar &
             
        
     
